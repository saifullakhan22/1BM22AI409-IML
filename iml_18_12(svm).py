# -*- coding: utf-8 -*-
"""IML_18-12(SVM).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EUEf60JozXSSUjC-OyfXH9QiIDzqkfaw
"""

# importing scikit learn with make_blobs
from sklearn.datasets import make_blobs

# creating datasets X containing n_samples
# Y containing two classes
X, Y = make_blobs(n_samples=500, centers=2,
                  random_state=0, cluster_std=0.40)
import matplotlib.pyplot as plt
# plotting scatters
plt.scatter(X[:, 0], X[:, 1], c=Y, s=20, cmap='spring');
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

xfit = np.linspace(-1, 3.5)

# plotting scattera
plt.scatter(X[:, 0], X[:, 1], c=Y, s=20, cmap='spring')

# plot a line between the different sets of data
for m, b, d in [(1, 0.65, 0.33), (0.5, 1.6, 0.55), (-0.2, 2.9, 0.2)]:
    yfit = m * xfit + b
    plt.plot(xfit, yfit, '-k')
    plt.fill_between(xfit, yfit - d, yfit + d, edgecolor='none',
    color='#AAAAAA', alpha=0.4)

plt.xlim(-1, 3.5);
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# reading csv file and extracting class column to y.
x = pd.read_csv("cancer.csv")
a = np.array(x)
y  = a[:,0] # classes having 0 and 1

# extracting two features
x = np.column_stack((x.smoothness_mean	,x.compactness_mean))

# 569 samples and 2 features
x.shape

# print (x),(y)

print (x),(y)

# import support vector classifier
# "Support Vector Classifier"
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

clf = SVC(kernel='linear')
# fitting x samples and y classes
clf.fit(X_train, y_train)
#Prediction
y_pred = clf.predict(X_test)
# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

clf.predict([[0.12, 0.23]])

clf.predict([[0.01,0.13]])

